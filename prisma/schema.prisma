// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usertable {
  username       String        @default("")
  firstname      String        @default("")
  lastname       String        @default("")
  id             Int           @id @default(autoincrement())
  email          String        @unique
  hashedPassword String
  registeredAt   DateTime      @default(now())
  role           String        @default("user")
  orders         Orderstable[]
  addresses      Adresses[]
}

model Adresses {
  id          Int        @id @default(autoincrement())
  address     String
  Usertable   Usertable? @relation(fields: [usertableId], references: [id])
  usertableId Int?
}

model Orderstable {
  id               Int        @id @default(autoincrement())
  quantity         Float
  plan             String
  deliverystatus   Boolean    @default(false)
  Usertable        Usertable? @relation(fields: [usertableId], references: [id])
  usertableId      Int?
  deliveredTo      String
  customerfeedback String     @default("")
  orderedat        DateTime   @default(now())
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  role          String    @default("user")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
